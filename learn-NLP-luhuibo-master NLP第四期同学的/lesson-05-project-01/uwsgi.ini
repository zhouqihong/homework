[uwsgi]

# 把socket = :8008 替换成 http = :8008，只用uWSGI服务器，web应用就可以访问
http = 127.0.0.1:8188

# 套接字通讯端口，相当于为外界留出一个uWSGI服务器的接口，负责与Nginx通信，但注意socket是无法直接通过http请求成功访问
# 使用下面的命令启动时，浏览器无法访问，因为socket是跟Nginx通信的
#   uwsgi --socket 127.0.0.1:8008 --wsgi-file run.py --master --processes 4 --threads 2 --stats 127.0.0.1:9191
# 需要将socket改为http，浏览器才能访问
#   uwsgi --http :8008 --wsgi-file run.py --master --processes 4 --threads 2 --stats 127.0.0.1:9191
# socket = 127.0.0.1:8188

# 项目目录，也可使用chdir替换pythonpath
pythonpath = ./

# module：指定项目启动脚本名字，我们可以在本地用python run.py启动flask项目--1
# module = run
# wsgi-file：指出真正启动脚本的文件名，我们可以在本地用python run.py启动flask项目--2
wsgi-file = run.py

# 程序内启用的application变量名，一般而言都是app=Flask(__name__)的所以这里是app
callable = app

# 处理器个数
processes = 4

# 线程数
threads = 2

# 获取uwsgi统计信息的服务地址
stats = 127.0.0.1:9191

# 使uWSGI进程在后台运行，并将日志打到指定的日志文件
daemonize = ./uwsgi.log
   